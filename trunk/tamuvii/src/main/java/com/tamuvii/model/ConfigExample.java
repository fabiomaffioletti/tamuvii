package com.tamuvii.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ConfigExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table config
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table config
     *
     * @ibatorgenerated
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public ConfigExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    protected ConfigExample(ConfigExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table config
     *
     * @ibatorgenerated
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andConfigkeyIsNull() {
            addCriterion("configKey is null");
            return this;
        }

        public Criteria andConfigkeyIsNotNull() {
            addCriterion("configKey is not null");
            return this;
        }

        public Criteria andConfigkeyEqualTo(String value) {
            addCriterion("configKey =", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyNotEqualTo(String value) {
            addCriterion("configKey <>", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyGreaterThan(String value) {
            addCriterion("configKey >", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyGreaterThanOrEqualTo(String value) {
            addCriterion("configKey >=", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyLessThan(String value) {
            addCriterion("configKey <", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyLessThanOrEqualTo(String value) {
            addCriterion("configKey <=", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyLike(String value) {
            addCriterion("configKey like", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyNotLike(String value) {
            addCriterion("configKey not like", value, "configkey");
            return this;
        }

        public Criteria andConfigkeyIn(List values) {
            addCriterion("configKey in", values, "configkey");
            return this;
        }

        public Criteria andConfigkeyNotIn(List values) {
            addCriterion("configKey not in", values, "configkey");
            return this;
        }

        public Criteria andConfigkeyBetween(String value1, String value2) {
            addCriterion("configKey between", value1, value2, "configkey");
            return this;
        }

        public Criteria andConfigkeyNotBetween(String value1, String value2) {
            addCriterion("configKey not between", value1, value2, "configkey");
            return this;
        }

        public Criteria andConfigvalueIsNull() {
            addCriterion("configValue is null");
            return this;
        }

        public Criteria andConfigvalueIsNotNull() {
            addCriterion("configValue is not null");
            return this;
        }

        public Criteria andConfigvalueEqualTo(String value) {
            addCriterion("configValue =", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueNotEqualTo(String value) {
            addCriterion("configValue <>", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueGreaterThan(String value) {
            addCriterion("configValue >", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueGreaterThanOrEqualTo(String value) {
            addCriterion("configValue >=", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueLessThan(String value) {
            addCriterion("configValue <", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueLessThanOrEqualTo(String value) {
            addCriterion("configValue <=", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueLike(String value) {
            addCriterion("configValue like", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueNotLike(String value) {
            addCriterion("configValue not like", value, "configvalue");
            return this;
        }

        public Criteria andConfigvalueIn(List values) {
            addCriterion("configValue in", values, "configvalue");
            return this;
        }

        public Criteria andConfigvalueNotIn(List values) {
            addCriterion("configValue not in", values, "configvalue");
            return this;
        }

        public Criteria andConfigvalueBetween(String value1, String value2) {
            addCriterion("configValue between", value1, value2, "configvalue");
            return this;
        }

        public Criteria andConfigvalueNotBetween(String value1, String value2) {
            addCriterion("configValue not between", value1, value2, "configvalue");
            return this;
        }
    }
}