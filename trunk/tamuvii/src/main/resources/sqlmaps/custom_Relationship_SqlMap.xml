<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="custom_relationship" >

  <resultMap id="userNeighbor" class="com.tamuvii.pojo.UserNeighbor">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
		<result property="email" column="email"/>
        <result property="website" column="website"/>
        <result property="websiteTitle" column="websiteTitle"/>
        <result property="address.city" column="city"/>
        <result property="address.country" column="country"/>
        <result property="imageLink" column="imageLink"/>
        <result property="dateAdded" column="date_added"/>
        <result property="lastMovies" column="username" select="custom_relationship.getLastSeenMoviesByUser"/>
        <result property="totMovies" column="username" select="custom_relationship.getUserMoviesCount"/>
   </resultMap>
   
   <select id="getUserMoviesCount" resultClass="java.lang.Integer" parameterClass="java.lang.String">
   		select		count(*) 
   		from		user_to_movie um 
   		where 		um.username = #username#
   					and um.wished = 0
   </select>
   
   
   <select id="getUserPublicInfo" resultMap="userNeighbor" parameterClass="java.lang.String" >
		select 			u.id,
					 	u.username, 
						u.email,
						u.website,
						u.website_title as websiteTitle,
						u.city,
						u.country,
						u.image as imageLink,
						null as date_added,
						null as lastMovies
			
		from 			app_user u
		
		where 			u.username = #username#  
  </select>
   
  <select id="getUserFriends" resultMap="userNeighbor" parameterClass="java.lang.String" >
		select 			u.id,
					 	u.username, 
						u.email,
						u.website,
						u.website_title as websiteTitle,
						u.city,
						u.country,
						u.image as imageLink,
						uu.date_added
			
		from 			user_to_user uu 		inner join 		app_user u
						on uu.second = u.username
		
		where 			uu.first = #username#
		and 			uu.friend = 1
  </select>
  
  <select id="getUserNeighborhoods" resultMap="userNeighbor" parameterClass="java.lang.String" >
		select 			u.id,
					 	u.username, 
						u.email,
						u.website,
						u.website_title as websiteTitle,
						u.city,
						u.country,
						u.image as imageLink,
						uu.date_added
			
		from 			user_to_user uu 		inner join 		app_user u
						on uu.second = u.username
		
		where 			uu.first = #username#
		and 			uu.friend = 0
  </select>
  
  <select id="getLastSeenMoviesByUser" parameterClass="java.lang.String" resultMap="custom_shelf.shelfItemMap">
  		select				m.movie, 
							m.duration, 
							m.original_title,
							m.original_plot,
							m.original_image,
							loc.localized_title,
							loc.localized_plot,
							loc.localized_image,
							d.director as directorId, 
							CONCAT(d.name, " ", d.surname) as director, 
							m.release_date, 
							um.date_added, 
							um.date_viewed, 
							um.mark,
							(select count(*) from user_to_movie um2 inner join app_user au on au.username = um2.username where um2.movie = m.movie and au.country = 'IT') as numUsers,
							r.review,
							r.title,
							r.review_text
							
		from 				user_to_movie um			inner join movie m
							on um.movie = m.movie 		inner join director d
							on d.director = m.director 	inner join app_user u
							on u.username = um.username left join localized_data loc
							on loc.movie = m.movie 		left join review r
							on r.movie = um.movie and r.username = #username#
							
		where				u.username = #username#
		and					um.wished = 0

		group by um.movie
		order by um.date_viewed desc

		limit 0,5
  </select>
  
</sqlMap>