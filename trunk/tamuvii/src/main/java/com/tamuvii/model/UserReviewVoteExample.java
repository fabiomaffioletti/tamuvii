package com.tamuvii.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Date;

public class UserReviewVoteExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public UserReviewVoteExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	protected UserReviewVoteExample(UserReviewVoteExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table user_review_vote
	 * @ibatorgenerated
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andReviewIsNull() {
			addCriterion("review is null");
			return this;
		}

		public Criteria andReviewIsNotNull() {
			addCriterion("review is not null");
			return this;
		}

		public Criteria andReviewEqualTo(Integer value) {
			addCriterion("review =", value, "review");
			return this;
		}

		public Criteria andReviewNotEqualTo(Integer value) {
			addCriterion("review <>", value, "review");
			return this;
		}

		public Criteria andReviewGreaterThan(Integer value) {
			addCriterion("review >", value, "review");
			return this;
		}

		public Criteria andReviewGreaterThanOrEqualTo(Integer value) {
			addCriterion("review >=", value, "review");
			return this;
		}

		public Criteria andReviewLessThan(Integer value) {
			addCriterion("review <", value, "review");
			return this;
		}

		public Criteria andReviewLessThanOrEqualTo(Integer value) {
			addCriterion("review <=", value, "review");
			return this;
		}

		public Criteria andReviewIn(List values) {
			addCriterion("review in", values, "review");
			return this;
		}

		public Criteria andReviewNotIn(List values) {
			addCriterion("review not in", values, "review");
			return this;
		}

		public Criteria andReviewBetween(Integer value1, Integer value2) {
			addCriterion("review between", value1, value2, "review");
			return this;
		}

		public Criteria andReviewNotBetween(Integer value1, Integer value2) {
			addCriterion("review not between", value1, value2, "review");
			return this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return this;
		}

		public Criteria andUsernameIn(List values) {
			addCriterion("username in", values, "username");
			return this;
		}

		public Criteria andUsernameNotIn(List values) {
			addCriterion("username not in", values, "username");
			return this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return this;
		}

		public Criteria andDatevotedIsNull() {
			addCriterion("date_voted is null");
			return this;
		}

		public Criteria andDatevotedIsNotNull() {
			addCriterion("date_voted is not null");
			return this;
		}

		public Criteria andDatevotedEqualTo(Date value) {
			addCriterion("date_voted =", value, "datevoted");
			return this;
		}

		public Criteria andDatevotedNotEqualTo(Date value) {
			addCriterion("date_voted <>", value, "datevoted");
			return this;
		}

		public Criteria andDatevotedGreaterThan(Date value) {
			addCriterion("date_voted >", value, "datevoted");
			return this;
		}

		public Criteria andDatevotedGreaterThanOrEqualTo(Date value) {
			addCriterion("date_voted >=", value, "datevoted");
			return this;
		}

		public Criteria andDatevotedLessThan(Date value) {
			addCriterion("date_voted <", value, "datevoted");
			return this;
		}

		public Criteria andDatevotedLessThanOrEqualTo(Date value) {
			addCriterion("date_voted <=", value, "datevoted");
			return this;
		}

		public Criteria andDatevotedIn(List values) {
			addCriterion("date_voted in", values, "datevoted");
			return this;
		}

		public Criteria andDatevotedNotIn(List values) {
			addCriterion("date_voted not in", values, "datevoted");
			return this;
		}

		public Criteria andDatevotedBetween(Date value1, Date value2) {
			addCriterion("date_voted between", value1, value2, "datevoted");
			return this;
		}

		public Criteria andDatevotedNotBetween(Date value1, Date value2) {
			addCriterion("date_voted not between", value1, value2, "datevoted");
			return this;
		}
	}
}