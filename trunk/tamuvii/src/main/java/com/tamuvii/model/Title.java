package com.tamuvii.model;
import java.io.Serializable;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/** 
 * Object mapping for hibernate-handled table: title.
 * @author autogenerated
 */

@Entity
@Table(name = "title", catalog = "tamuvii")
public  class Title implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -559009206L;


	/** Field mapping. */
	private String id;
	/** Field mapping. */
	private String locale;
	/** Field mapping. */
	private String localizedTitle;
	/** Field mapping. */
	private Movie movie;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public Title() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public Title(String id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param id String object;
	 * @param locale String object;
	 * @param movie Movie object;
	 */
	public Title(String id, String locale, Movie movie) {

		this.id = id;
		this.locale = locale;
		this.movie = movie;
	}
	
 


    /**
     * Return the value associated with the column: id.
	 * @return A String object (this.id)
	 */
    @Id 
	@Column( name = "title", nullable = false, length = 45  )
	public String getId() {
		return this.id;
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final String id) {
		this.id = id;
	}


    /**
     * Return the value associated with the column: locale.
	 * @return A String object (this.locale)
	 */
	@Column( nullable = false, length = 5  )
	public String getLocale() {
		return this.locale;
	}
	

  
    /**  
     * Set the value related to the column: locale.
	 * @param locale the locale value you wish to set
	 */
	public void setLocale(final String locale) {
		this.locale = locale;
	}


    /**
     * Return the value associated with the column: localizedTitle.
	 * @return A String object (this.localizedTitle)
	 */
	@Column( name = "localized_title", length = 200  )
	public String getLocalizedTitle() {
		return this.localizedTitle;
	}
	

  
    /**  
     * Set the value related to the column: localizedTitle.
	 * @param localizedTitle the localizedTitle value you wish to set
	 */
	public void setLocalizedTitle(final String localizedTitle) {
		this.localizedTitle = localizedTitle;
	}


    /**
     * Return the value associated with the column: movie.
	 * @return A Movie object (this.movie)
	 */
	
	@ManyToOne( cascade = CascadeType.ALL )
	@JoinColumn(name = "movie" )
	public Movie getMovie() {
		return this.movie;
	}
	

  
    /**  
     * Set the value related to the column: movie.
	 * @param movie the movie value you wish to set
	 */
	public void setMovie(final Movie movie) {
		this.movie = movie;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public Title clone() throws CloneNotSupportedException {
		super.clone();  // keep hierarchy
        final Title copy = new Title();

		copy.setId(this.getId());
		copy.setLocale(this.getLocale());
		copy.setLocalizedTitle(this.getLocalizedTitle());
		copy.setMovie(this.getMovie());
		return copy;
	}


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("id: " + this.id + ", ");
		sb.append("locale: " + this.locale + ", ");
		sb.append("localizedTitle: " + this.localizedTitle + ", ");
		return sb.toString();		
	}


	
	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		if ( this == aThat ) {
			 return true;
		}
		if ((aThat == null) || ( !(aThat instanceof Title))) {
			 return false;
		}
		final Title that = (Title) aThat;
		
		return (((this.id == null) && (that.id == null)) 
			   || (this.id != null  && this.id.equals(that.id)))
			   && 
			(((this.locale == null) && (that.locale == null)) 
			   || (this.locale != null  && this.locale.equals(that.locale)))
			   && 
			(((this.localizedTitle == null) && (that.localizedTitle == null)) 
			   || (this.localizedTitle != null  && this.localizedTitle.equals(that.localizedTitle)))
			   && 
			(((this.movie == null) && (that.movie == null)) 
			   || (this.movie != null  && this.movie.equals(that.movie)))
			   ;
	}


	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		int result = 0;
		result = 1000003 * result + (this.id == null ? 0 : this.id.hashCode());
		result = 1000003 * result + (this.locale == null ? 0 : this.locale.hashCode());
		result = 1000003 * result + (this.localizedTitle == null ? 0 : this.localizedTitle.hashCode());

		return result;  
	}
}