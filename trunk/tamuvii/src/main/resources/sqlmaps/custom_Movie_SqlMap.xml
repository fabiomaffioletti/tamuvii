<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="custom_movie" >

  <resultMap id="socialMovieMap" class="com.tamuvii.pojo.SocialMovie" >
    <result column="movie" property="movie" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="original_title" property="originalTitle" jdbcType="VARCHAR" />
    <result column="original_plot" property="originalPlot" jdbcType="VARCHAR" />
    <result column="original_image" property="originalImage" jdbcType="VARCHAR" />
    <result column="localized_title" property="localizedTitle" jdbcType="VARCHAR" />
    <result column="localized_plot" property="localizedPlot" jdbcType="VARCHAR" />
    <result column="localized_image" property="localizedImage" jdbcType="VARCHAR" />
    <result column="directorId" property="directorId" jdbcType="INTEGER" />
    <result column="director" property="director" jdbcType="VARCHAR" />
    <result column="release_date" property="releaseDate" jdbcType="TIMESTAMP" />
    <result column="numReviews" property="numReviews" jdbcType="INTEGER" />
    <result column="avgMark" property="avgMark" jdbcType="FLOAT" />
    <result column="numMarks" property="numMarks" jdbcType="INTEGER" />
    <result column="numUsers" property="numUsers" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="personalMovieMap" class="com.tamuvii.pojo.PersonalMovie" >
    <result column="movie" property="movie" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="original_title" property="originalTitle" jdbcType="VARCHAR" />
    <result column="original_plot" property="originalPlot" jdbcType="VARCHAR" />
    <result column="original_image" property="originalImage" jdbcType="VARCHAR" />
    <result column="localized_title" property="localizedTitle" jdbcType="VARCHAR" />
    <result column="localized_plot" property="localizedPlot" jdbcType="VARCHAR" />
    <result column="localized_image" property="localizedImage" jdbcType="VARCHAR" />
    <result column="directorId" property="directorId" jdbcType="INTEGER" />
    <result column="director" property="director" jdbcType="VARCHAR" />
    <result column="release_date" property="releaseDate" jdbcType="TIMESTAMP" />
    <result column="date_added" property="dateAdded" jdbcType="TIMESTAMP" />
    <result column="date_viewed" property="dateViewed" jdbcType="TIMESTAMP" />
    <result column="mark" property="mark" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="movieUser" class="com.tamuvii.pojo.MovieUser">
        <result property="movieUser" jdbcType="INTEGER" column="movieUser"/>
        <result property="username" jdbcType="VARCHAR" column="username"/>
        <result column="mark" jdbcType="INTEGER" property="mark" />
        <result property="imageLink" jdbcType="VARCHAR" column="imageLink"/>
  </resultMap>
  
  <!-- 
  <select id="getSocialMovieDetails" resultMap="socialMovieMap" parameterClass="com.tamuvii.pojo.queryfilter.SocialMovieFilter">
  		select				m.movie, 
							m.duration, 
							m.original_title,
							m.original_plot,
							m.original_image,
							loc.localized_title,
							loc.localized_plot,
							loc.localized_image,
							d.director as directorId, 
							CONCAT(d.name, " ", d.surname) as director, 
							m.release_date,
							count(distinct r.review) as numReviews,
							avg(um.mark) as avgMark,
							count(distinct um.mark) as numMarks,
							(select count(*) from user_to_movie um inner join app_user u on um.username = u.username where u.country like concat('%', au.country, '%') and um.movie = #movie#) as numUsers
							
		from 				movie m 						left join review r
							on	m.movie = r.movie 			inner join director d
							on m.director = d.director		inner join user_to_movie um 
							on um.movie = m.movie 			inner join app_user au 
							on um.username = au.username	left join localized_data loc
							on loc.movie = m.movie			and	 	loc.locale like concat('%', au.country, '%')
							
		where 				m.movie = #movie#
							and au.username = #username#
  </select>
   -->
   
  <select id="getSocialMovieDetails" resultMap="socialMovieMap" parameterClass="com.tamuvii.pojo.queryfilter.SocialMovieFilter">
  		select				abc.movie, 
							abc.duration, 
							abc.original_title,
							abc.original_plot,
							abc.original_image,
							abc.localized_title,
							abc.localized_plot,
							abc.localized_image,
							abc.director as directorId, 
							concat(abc.name, " ", abc.surname) as director,
							abc.release_date,
							avg(abc.mark) as avgMark,
							count(distinct abc.mark) as numMarks,
							count(distinct abc.review) as numReviews,
							count(distinct abc.username) as numUsers

		from (
					select			m.movie, 
									m.duration, 
									m.original_title,
									m.original_plot,
									m.original_image,
									m.release_date,
									loc.localized_title,
									loc.localized_plot,
									loc.localized_image,
									d.*,
									um.mark as mark,
									r.review,
									au.username
									
					from			movie m 							inner join 	user_to_movie um
									on m.movie = um.movie 				inner join	app_user au	
									on	au.username = um.username		inner join director d
									on m.director = d.director			left join localized_data loc
									on m.movie = loc.movie	and loc.locale like concat('%', au.country, '%')	left join review r
									on	m.movie = r.movie	and r.username = au.username
					
					where			m.movie = #movie#
									and au.country = (select u.country from app_user u where u.username = #username#)
		
					group by		um.username
					
		
		) as abc
  </select> 
  
  <select id="getPersonalMovieDetails" resultMap="personalMovieMap" parameterClass="com.tamuvii.pojo.queryfilter.PersonalMovieFilterMap">
  		select				m.movie, 
							m.duration, 
							m.original_title,
							m.original_plot,
							m.original_image,
							loc.localized_title,
							loc.localized_plot,
							loc.localized_image,
							d.director as directorId, 
							CONCAT(d.name, " ", d.surname) as director, 
							m.release_date, 
							um.date_added, 
							um.date_viewed, 
							um.mark
							
		from 				user_to_movie um			inner join movie m
							on um.movie = m.movie 		inner join director d
							on d.director = m.director 	inner join app_user u
							on u.username = um.username left join localized_data loc
							on loc.movie = m.movie and loc.locale like concat('%', u.country, '%')		
							
		where m.movie = #movie# 
		and u.username = #username#
  </select>
  
  <select id="getUsersByMovie" resultMap="movieUser" parameterClass="com.tamuvii.pojo.queryfilter.SocialMovieFilter">
		select			u.id as movieUser,
						u.username,
						um.mark,
						u.image as imageLink
					
		from			app_user u		inner join		user_to_movie um
						on u.username = um.username		and u.country = (select au.country from app_user au where au.username =  #username#)
						
		where			um.movie = #movie#
		group by 		u.username  
  </select>
  
  <select id="searchSocialMovies" resultMap="socialMovieMap" parameterClass="com.tamuvii.pojo.queryfilter.SocialMovieFilter" >
		select			m.movie, 
						m.duration, 
						m.original_title,
						m.original_plot,
						m.original_image,
						m.release_date,
						loc.localized_title,
						loc.localized_plot,
						loc.localized_image,
						d.*,
						null as mark,
						null as review,
						null as username
						
		from			movie m 							inner join 	user_to_movie um
						on m.movie = um.movie 				inner join	app_user au	
						on	au.username = um.username		inner join director d
						on m.director = d.director			left join localized_data loc
						on m.movie = loc.movie	and loc.locale like concat('%', au.country, '%')	left join review r
						on	m.movie = r.movie	and r.username = au.username
		
		<dynamic prepend="WHERE">
	         <isNotNull property="filter" prepend="and">
                  <iterate conjunction="and" property="filter" removeFirstPrepend="true">
                       (
                       m.original_title like #filter[]#
                       or
                       loc.localized_title like #filter[]#
                       or
                       d.surname like #filter[]#
                       or
                       d.name like #filter[]#
                       )
                  </iterate>
	        </isNotNull>
	        and loc.locale like (select country from app_user where username = #username#)
	    </dynamic>								
							
		group by m.movie
  </select>
  
  <!-- 
  <select id="searchSocialMovies" resultMap="socialMovieMap" parameterClass="com.tamuvii.pojo.queryfilter.SocialMovieFilter" >
		select				m.movie, 
							m.duration, 
							m.original_title,
							m.original_plot,
							m.original_image,
							loc.localized_title,
							loc.localized_plot,
							loc.localized_image,
							d.director as directorId, 
							CONCAT(d.name, " ", d.surname) as director, 
							m.release_date,
							count(distinct r.review) as numReviews,
							avg(um.mark) as avgMark,
							null as numUsers
							
		from 				movie m 					left join review r
							on	m.movie = r.movie 		inner join director d
							on m.director = d.director	inner join user_to_movie um 
							on um.movie = m.movie 		left join localized_data loc
							on loc.movie = m.movie
							
		<dynamic prepend="WHERE">
	         <isNotNull property="filter" prepend="and">
                  <iterate conjunction="and" property="filter" removeFirstPrepend="true">
                       (
                       m.original_title like #filter[]#
                       or
                       loc.localized_title like #filter[]#
                       or
                       d.surname like #filter[]#
                       or
                       d.name like #filter[]#
                       )
                  </iterate>
	        </isNotNull>
	        and loc.locale like (select country from app_user where username = #username#)
	    </dynamic>								
							
		group by m.movie
  </select>
   -->
  
</sqlMap>