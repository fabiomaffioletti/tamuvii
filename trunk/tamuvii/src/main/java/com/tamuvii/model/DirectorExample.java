package com.tamuvii.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DirectorExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table director
	 * @ibatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table director
	 * @ibatorgenerated
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public DirectorExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	protected DirectorExample(DirectorExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table director
	 * @ibatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table director
	 * @ibatorgenerated
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andDirectorIsNull() {
			addCriterion("director is null");
			return this;
		}

		public Criteria andDirectorIsNotNull() {
			addCriterion("director is not null");
			return this;
		}

		public Criteria andDirectorEqualTo(Integer value) {
			addCriterion("director =", value, "director");
			return this;
		}

		public Criteria andDirectorNotEqualTo(Integer value) {
			addCriterion("director <>", value, "director");
			return this;
		}

		public Criteria andDirectorGreaterThan(Integer value) {
			addCriterion("director >", value, "director");
			return this;
		}

		public Criteria andDirectorGreaterThanOrEqualTo(Integer value) {
			addCriterion("director >=", value, "director");
			return this;
		}

		public Criteria andDirectorLessThan(Integer value) {
			addCriterion("director <", value, "director");
			return this;
		}

		public Criteria andDirectorLessThanOrEqualTo(Integer value) {
			addCriterion("director <=", value, "director");
			return this;
		}

		public Criteria andDirectorIn(List values) {
			addCriterion("director in", values, "director");
			return this;
		}

		public Criteria andDirectorNotIn(List values) {
			addCriterion("director not in", values, "director");
			return this;
		}

		public Criteria andDirectorBetween(Integer value1, Integer value2) {
			addCriterion("director between", value1, value2, "director");
			return this;
		}

		public Criteria andDirectorNotBetween(Integer value1, Integer value2) {
			addCriterion("director not between", value1, value2, "director");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andSurnameIsNull() {
			addCriterion("surname is null");
			return this;
		}

		public Criteria andSurnameIsNotNull() {
			addCriterion("surname is not null");
			return this;
		}

		public Criteria andSurnameEqualTo(String value) {
			addCriterion("surname =", value, "surname");
			return this;
		}

		public Criteria andSurnameNotEqualTo(String value) {
			addCriterion("surname <>", value, "surname");
			return this;
		}

		public Criteria andSurnameGreaterThan(String value) {
			addCriterion("surname >", value, "surname");
			return this;
		}

		public Criteria andSurnameGreaterThanOrEqualTo(String value) {
			addCriterion("surname >=", value, "surname");
			return this;
		}

		public Criteria andSurnameLessThan(String value) {
			addCriterion("surname <", value, "surname");
			return this;
		}

		public Criteria andSurnameLessThanOrEqualTo(String value) {
			addCriterion("surname <=", value, "surname");
			return this;
		}

		public Criteria andSurnameLike(String value) {
			addCriterion("surname like", value, "surname");
			return this;
		}

		public Criteria andSurnameNotLike(String value) {
			addCriterion("surname not like", value, "surname");
			return this;
		}

		public Criteria andSurnameIn(List values) {
			addCriterion("surname in", values, "surname");
			return this;
		}

		public Criteria andSurnameNotIn(List values) {
			addCriterion("surname not in", values, "surname");
			return this;
		}

		public Criteria andSurnameBetween(String value1, String value2) {
			addCriterion("surname between", value1, value2, "surname");
			return this;
		}

		public Criteria andSurnameNotBetween(String value1, String value2) {
			addCriterion("surname not between", value1, value2, "surname");
			return this;
		}

		public Criteria andAkaIsNull() {
			addCriterion("aka is null");
			return this;
		}

		public Criteria andAkaIsNotNull() {
			addCriterion("aka is not null");
			return this;
		}

		public Criteria andAkaEqualTo(String value) {
			addCriterion("aka =", value, "aka");
			return this;
		}

		public Criteria andAkaNotEqualTo(String value) {
			addCriterion("aka <>", value, "aka");
			return this;
		}

		public Criteria andAkaGreaterThan(String value) {
			addCriterion("aka >", value, "aka");
			return this;
		}

		public Criteria andAkaGreaterThanOrEqualTo(String value) {
			addCriterion("aka >=", value, "aka");
			return this;
		}

		public Criteria andAkaLessThan(String value) {
			addCriterion("aka <", value, "aka");
			return this;
		}

		public Criteria andAkaLessThanOrEqualTo(String value) {
			addCriterion("aka <=", value, "aka");
			return this;
		}

		public Criteria andAkaLike(String value) {
			addCriterion("aka like", value, "aka");
			return this;
		}

		public Criteria andAkaNotLike(String value) {
			addCriterion("aka not like", value, "aka");
			return this;
		}

		public Criteria andAkaIn(List values) {
			addCriterion("aka in", values, "aka");
			return this;
		}

		public Criteria andAkaNotIn(List values) {
			addCriterion("aka not in", values, "aka");
			return this;
		}

		public Criteria andAkaBetween(String value1, String value2) {
			addCriterion("aka between", value1, value2, "aka");
			return this;
		}

		public Criteria andAkaNotBetween(String value1, String value2) {
			addCriterion("aka not between", value1, value2, "aka");
			return this;
		}

		public Criteria andImageIsNull() {
			addCriterion("image is null");
			return this;
		}

		public Criteria andImageIsNotNull() {
			addCriterion("image is not null");
			return this;
		}

		public Criteria andImageEqualTo(String value) {
			addCriterion("image =", value, "image");
			return this;
		}

		public Criteria andImageNotEqualTo(String value) {
			addCriterion("image <>", value, "image");
			return this;
		}

		public Criteria andImageGreaterThan(String value) {
			addCriterion("image >", value, "image");
			return this;
		}

		public Criteria andImageGreaterThanOrEqualTo(String value) {
			addCriterion("image >=", value, "image");
			return this;
		}

		public Criteria andImageLessThan(String value) {
			addCriterion("image <", value, "image");
			return this;
		}

		public Criteria andImageLessThanOrEqualTo(String value) {
			addCriterion("image <=", value, "image");
			return this;
		}

		public Criteria andImageLike(String value) {
			addCriterion("image like", value, "image");
			return this;
		}

		public Criteria andImageNotLike(String value) {
			addCriterion("image not like", value, "image");
			return this;
		}

		public Criteria andImageIn(List values) {
			addCriterion("image in", values, "image");
			return this;
		}

		public Criteria andImageNotIn(List values) {
			addCriterion("image not in", values, "image");
			return this;
		}

		public Criteria andImageBetween(String value1, String value2) {
			addCriterion("image between", value1, value2, "image");
			return this;
		}

		public Criteria andImageNotBetween(String value1, String value2) {
			addCriterion("image not between", value1, value2, "image");
			return this;
		}
	}
}