package com.tamuvii.model;
import java.io.Serializable;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/** 
 * Object mapping for hibernate-handled table: mark.
 * @author autogenerated
 */

@Entity
@Table(name = "mark", catalog = "tamuvii")
public  class Mark implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -559009208L;


	/** Field mapping. */
	private String id;
	/** Field mapping. */
	private Movie movie;
	/** Field mapping. */
	private Integer stars;
	/** Field mapping. */
	private User user;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public Mark() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public Mark(String id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param id String object;
	 * @param movie Movie object;
	 * @param stars Integer object;
	 * @param user User object;
	 */
	public Mark(String id, Movie movie, Integer stars, 					
			User user) {

		this.id = id;
		this.movie = movie;
		this.stars = stars;
		this.user = user;
	}
	
 


    /**
     * Return the value associated with the column: id.
	 * @return A String object (this.id)
	 */
    @Id 
	@Column( name = "mark", nullable = false, length = 80  )
	public String getId() {
		return this.id;
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final String id) {
		this.id = id;
	}


    /**
     * Return the value associated with the column: movie.
	 * @return A Movie object (this.movie)
	 */
	
	@ManyToOne( cascade = CascadeType.ALL )
	@JoinColumn(name = "movie" )
	public Movie getMovie() {
		return this.movie;
	}
	

  
    /**  
     * Set the value related to the column: movie.
	 * @param movie the movie value you wish to set
	 */
	public void setMovie(final Movie movie) {
		this.movie = movie;
	}


    /**
     * Return the value associated with the column: stars.
	 * @return A Integer object (this.stars)
	 */
	@Column( nullable = false  )
	public Integer getStars() {
		return this.stars;
	}
	

  
    /**  
     * Set the value related to the column: stars.
	 * @param stars the stars value you wish to set
	 */
	public void setStars(final Integer stars) {
		this.stars = stars;
	}


    /**
     * Return the value associated with the column: user.
	 * @return A User object (this.user)
	 */
	
	@ManyToOne( cascade = CascadeType.ALL )
	@JoinColumn(name = "user" )
	public User getUser() {
		return this.user;
	}
	

  
    /**  
     * Set the value related to the column: user.
	 * @param user the user value you wish to set
	 */
	public void setUser(final User user) {
		this.user = user;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public Mark clone() throws CloneNotSupportedException {
		super.clone();  // keep hierarchy
        final Mark copy = new Mark();

		copy.setId(this.getId());
		copy.setMovie(this.getMovie());
		copy.setStars(this.getStars());
		copy.setUser(this.getUser());
		return copy;
	}


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("id: " + this.id + ", ");
		sb.append("stars: " + this.stars + ", ");
		return sb.toString();		
	}


	
	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		if ( this == aThat ) {
			 return true;
		}
		if ((aThat == null) || ( !(aThat instanceof Mark))) {
			 return false;
		}
		final Mark that = (Mark) aThat;
		
		return (((this.id == null) && (that.id == null)) 
			   || (this.id != null  && this.id.equals(that.id)))
			   && 
			(((this.movie == null) && (that.movie == null)) 
			   || (this.movie != null  && this.movie.equals(that.movie)))
			   && 
			(((this.stars == null) && (that.stars == null)) 
			   || (this.stars != null  && this.stars.equals(that.stars)))
			   && 
			(((this.user == null) && (that.user == null)) 
			   || (this.user != null  && this.user.equals(that.user)))
			   ;
	}


	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		int result = 0;
		result = 1000003 * result + (this.id == null ? 0 : this.id.hashCode());
		result = 1000003 * result + (this.stars == null ? 0 : this.stars.hashCode());

		return result;  
	}
}