<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="custom_director" >

  <resultMap id="detailedDirectorMap" class="com.tamuvii.pojo.DirectorDetail" >
    <result column="director" jdbcType="INTEGER" property="director.director" />
    <result column="name" jdbcType="VARCHAR" property="director.name" />
    <result column="surname" jdbcType="VARCHAR" property="director.surname" />
    <result column="aka" jdbcType="VARCHAR" property="director.aka" />
	<result column="image" jdbcType="VARCHAR" property="director.image" />    
	<result column="numMovies" jdbcType="INTEGER" property="numMovies" />
  </resultMap>
  
  <select id="getDirectorDetail" resultMap="detailedDirectorMap" parameterClass="java.lang.Integer">
	  	select			d.director,
						d.name,
						d.surname,
						d.aka,
						d.image,
						count(d.director) as numMovies

		from			director d inner join movie m
						on d.director = m.director
						
		where			d.director = #director# 
		
		group by		d.director
  </select>
  
  <select id="getDirectorDetailSocialMovieList" resultMap="custom_movie.socialMovieMap" parameterClass="java.lang.Integer">
  		select				m.movie, 
							m.duration, 
							m.original_title,
							m.original_plot,
							m.original_image,
							loc.localized_title,
							loc.localized_plot,
							loc.localized_image,
							d.director as directorId, 
							CONCAT(d.name, " ", d.surname) as director, 
							m.release_date,
							count(distinct r.review) as numReviews,
							avg(um.mark) as avgMark,
							count(distinct um.mark) as numMarks,
							null as movieUsers,
							count(distinct um.username) as numUsers
							
		from 				movie m 					left join review r
							on	m.movie = r.movie 		inner join director d
							on m.director = d.director	inner join user_to_movie um 
							on um.movie = m.movie 		left join localized_data loc
							on loc.movie = m.movie
							
		where 				d.director = #director#
		group by			m.movie
  </select>

</sqlMap>